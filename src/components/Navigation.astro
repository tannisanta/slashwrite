---
import ThemeToggle from './ThemeToggle.astro';
import Icon from './Icon.astro';
import { getCollection } from 'astro:content';
import { getSiteConfig, getSocialConfig } from '@utils/config';
import { withBase }from 'utils/withBase.ts';

// Get all blog posts
const blogPosts = await getCollection('blog', ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

// Extract and count categories
const categories = blogPosts.reduce((acc, post) => {
  if (post.data.categories) {
    post.data.categories.forEach(category => {
      acc[category] = (acc[category] || 0) + 1;
    });
  }
  return acc;
}, {} as Record<string, number>);

// Convert to array and sort alphabetically
const sortedCategories = Object.entries(categories)
  .sort(([a], [b]) => a.localeCompare(b))
  .map(([name, count]) => ({ name, count }));

const { class: className } = Astro.props;

// Get site configuration
const siteConfig = getSiteConfig();
const socialConfig = getSocialConfig();

// Get current path for active state detection
const currentPath = Astro.url.pathname;

// Helper function to determine if a link is active
const base = import.meta.env.BASE_URL || '/inwriting/'; // or from your config
const activeLinks = {
  '/': isActiveLink('/'),
  '/about': isActiveLink('/about'),
  '/blog': isActiveLink('/blog'),
  '/projects': isActiveLink('/projects'),
  '/canvas': isActiveLink('/canvas'),
};
function isActiveLink(path: string) {
  const currentPath = Astro.url.pathname;

  // Normalize combined path to avoid double slashes
  const fullPath = (base + path).replace(/\/+/g, '/');

  // Return true if current path exactly matches the full path
  return currentPath === fullPath;
}

// Helper function to determine if a category is active
function isActiveCategory(categoryName: string): boolean {
  const categoryPath = `/categories/${categoryName.toLowerCase().replace(/\s+/g, '-')}`;
  return currentPath.startsWith(categoryPath);
}
---

<nav class:list={["bg-white dark:bg-slate-900 border-r border-slate-200 dark:border-slate-800 h-full p-4 flex flex-col", className]}>
  <div class="py-4">
    <a href={withBase('/')} class="flex items-center gap-2 text-xl font-bold">
      <Icon name="book" class="w-6 h-6 text-indigo-600 dark:text-indigo-400" />
      <span>{siteConfig.brandTitle}</span>
    </a>
  </div>

  <div class="mt-8 space-y-6 flex-1">
    <div>
      <h3 class="text-xs uppercase tracking-wider text-slate-500 dark:text-slate-400 font-semibold mb-3">Navigation</h3>
      <ul class="space-y-2">
        <li>
          <a href={withBase('/')} class:list={[
            "flex items-center gap-2 p-2 rounded-lg transition-colors",
            isActiveLink('/') 
              ? "bg-indigo-100 dark:bg-indigo-900/30 text-indigo-700 dark:text-indigo-300 font-medium" 
              : "hover:bg-slate-100 dark:hover:bg-slate-800"
          ]}>
            <Icon name="home" class:list={[
              "w-5 h-5",
              isActiveLink('/') ? "text-indigo-600 dark:text-indigo-400" : ""
            ]} />
            <span>Home</span>
          </a>
        </li>
        <li>
          <a href={withBase('/about')} class:list={[
            "flex items-center gap-2 p-2 rounded-lg transition-colors",
            isActiveLink('/about') 
              ? "bg-indigo-100 dark:bg-indigo-900/30 text-indigo-700 dark:text-indigo-300 font-medium" 
              : "hover:bg-slate-100 dark:hover:bg-slate-800"
          ]}>
            <Icon name="user" class:list={[
              "w-5 h-5",
              isActiveLink('/about') ? "text-indigo-600 dark:text-indigo-400" : ""
            ]} />
            <span>About</span>
          </a>
        </li>
        <li>
          <a href={withBase('/blog')} class:list={[
            "flex items-center gap-2 p-2 rounded-lg transition-colors",
            isActiveLink('/blog') 
              ? "bg-indigo-100 dark:bg-indigo-900/30 text-indigo-700 dark:text-indigo-300 font-medium" 
              : "hover:bg-slate-100 dark:hover:bg-slate-800"
          ]}>
            <Icon name="file-text" class:list={[
              "w-5 h-5",
              isActiveLink('/blog') ? "text-indigo-600 dark:text-indigo-400" : ""
            ]} />
            <span>Blog</span>
          </a>
        </li>
        <li>
          <a href={withBase('/projects')} class:list={[
            "flex items-center gap-2 p-2 rounded-lg transition-colors",
            isActiveLink('/projects') 
              ? "bg-indigo-100 dark:bg-indigo-900/30 text-indigo-700 dark:text-indigo-300 font-medium" 
              : "hover:bg-slate-100 dark:hover:bg-slate-800"
          ]}>
            <Icon name="box" class:list={[
              "w-5 h-5",
              isActiveLink('/projects') ? "text-indigo-600 dark:text-indigo-400" : ""
            ]} />
            <span>Projects</span>
          </a>
          <li>
            <a href={withBase('/canvas')} class:list={[
              "flex items-center gap-2 p-2 rounded-lg transition-colors",
              isActiveLink('/canvas') 
                ? "bg-indigo-100 dark:bg-indigo-900/30 text-indigo-700 dark:text-indigo-300 font-medium" 
                : "hover:bg-slate-100 dark:hover:bg-slate-800"
            ]}>
              <Icon name="canvas" class:list={[
                "w-5 h-6",
                isActiveLink('/canvas') ? "text-indigo-600 dark:text-indigo-400" : ""
              ]} />
              <span>Canvas</span>
            </a>
          </li>
        </li>
      </ul>
    </div>

    {sortedCategories.length > 0 && (
      <div>
        <h3 class="text-xs uppercase tracking-wider text-slate-500 dark:text-slate-400 font-semibold mb-3">Categories</h3>
        <ul class="space-y-1">
          {sortedCategories.map(({ name, count }) => (
            <li>
              <a 
                href={withBase(`/categories/${name.toLowerCase().replace(/\s+/g, '-')}`)} 
                class:list={[
                  "block p-2 rounded-lg transition-colors flex justify-between items-center",
                  isActiveCategory(name)
                    ? "bg-indigo-100 dark:bg-indigo-900/30 text-indigo-700 dark:text-indigo-300 font-medium"
                    : "hover:bg-slate-100 dark:hover:bg-slate-800"
                ]}
              >
                <span>{name}</span>
                <span class:list={[
                  "text-xs rounded-full px-2 py-0.5",
                  isActiveCategory(name)
                    ? "bg-indigo-200 dark:bg-indigo-800 text-indigo-800 dark:text-indigo-200"
                    : "bg-slate-200 dark:bg-slate-700 text-slate-600 dark:text-slate-300"
                ]}>{count}</span>
              </a>
            </li>
          ))}
        </ul>
      </div>
    )}
  </div>

  <div class="mt-auto pt-4 border-t border-slate-200 dark:border-slate-800">
    <div class="flex items-center justify-between">
      <div class="flex space-x-2">
        <a href={socialConfig.github} class="p-2 rounded-full hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors" aria-label="GitHub">
          <Icon name="github" class="w-5 h-5" />
        </a>
        <a href={socialConfig.linkedin} class="p-2 rounded-full hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors" aria-label="LinkedIn">
          <Icon name="linkedin" class="w-5 h-5" />
        </a>
        <a href="/api/rss.xml" class="p-2 rounded-full hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors" aria-label="RSS">
          <Icon name="rss" class="w-5 h-5" />
        </a>
      </div>
      <ThemeToggle />
    </div>
  </div>
</nav>